{"ast":null,"code":"var _jsxFileName = \"/Users/kesu/Desktop/flixclone/flixclone/src/Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport \"./Row.css\";\nimport YouTube from \"react-youtube\";\nimport movieTrailer from 'movie-trailer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\"; // \"https://api.themoviedb.org/3\";\n// \"https://image.tmdb.org/t/p/original/\";\n// props hat allow us to fetch our data, make certain rows large and title\n\nfunction Row(_ref) {\n  _s();\n\n  let {\n    title,\n    fetchUrl,\n    isLargeRow\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\"); //useEffect will store all the movie info from TMDB.\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      console.log(request);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]); // console.log(movies);\n\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1\n    }\n  }; // const handleClick = (movie) => {\n  //     if (trailerUrl) {\n  //         setTrailerUrl('');\n  //     } else { \n  //         movieTrailer(movie?.name || \"\")\n  //         .then(url => {\n  //             const urlParams = new URLSearchParams(new URL(url).search);\n  //            setTrailerUrl(urlParams.get(\"v\"));\n  //         })\n  //         .catch(error => console.log(error));\n  //     }\n  // };\n\n  const handleClick = movie => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      movieTrailer((movie === null || movie === void 0 ? void 0 : movie.title) || (movie === null || movie === void 0 ? void 0 : movie.name) || (movie === null || movie === void 0 ? void 0 : movie.original_name) || \"\").then(url => {\n        const urlParams = new URLSearchParams(new URL(url).search);\n        setTrailerUrl(urlParams.get('v'));\n      }).catch(error => console.log(error));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleClick(movie),\n        className: `row__poster ${isLargeRow && \"row__posterLarge\"}`,\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 14\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), trailerUrl && /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: trailerUrl,\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Row, \"k63ruaDr6ck94JTzLN3dN+sD/HM=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useState","useEffect","axios","YouTube","movieTrailer","base_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","fetchData","request","get","console","log","data","results","opts","height","width","playerVars","autoplay","handleClick","movie","name","original_name","then","url","urlParams","URLSearchParams","URL","search","catch","error","map","poster_path","backdrop_path","id"],"sources":["/Users/kesu/Desktop/flixclone/flixclone/src/Row.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport \"./Row.css\";\nimport YouTube from \"react-youtube\";\nimport movieTrailer from 'movie-trailer';\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n// \"https://api.themoviedb.org/3\";\n// \"https://image.tmdb.org/t/p/original/\";\n\n// props hat allow us to fetch our data, make certain rows large and title\nfunction Row({ title, fetchUrl, isLargeRow}) {\nconst [movies, setMovies] = useState([]);\nconst [trailerUrl, setTrailerUrl] = useState(\"\");\n\n//useEffect will store all the movie info from TMDB.\nuseEffect(() => {\n async function fetchData() {\n        const request = await axios.get(fetchUrl)\n        console.log(request);\n        setMovies(request.data.results);\n        return request;\n }\n fetchData();\n}, [fetchUrl]);\n\n    // console.log(movies);\n    const opts ={\n        height: \"390\",\n        width: \"100%\",\n        playerVars: {\n            autoplay: 1,\n        },\n    };\n\n    // const handleClick = (movie) => {\n    //     if (trailerUrl) {\n    //         setTrailerUrl('');\n    //     } else { \n    //         movieTrailer(movie?.name || \"\")\n    //         .then(url => {\n    //             const urlParams = new URLSearchParams(new URL(url).search);\n    //            setTrailerUrl(urlParams.get(\"v\"));\n    //         })\n    //         .catch(error => console.log(error));\n    //     }\n    // };\n    const handleClick = (movie) => {\n        if(trailerUrl){\n          setTrailerUrl(\"\");\n        }else{\n          movieTrailer(movie?.title || movie?.name || movie?.original_name || \"\")\n          .then(url => {\n            const urlParams = new URLSearchParams( new URL(url).search);\n            setTrailerUrl(urlParams.get('v'));\n   \n          }).catch(error => console.log(error))\n        }\n          };\n  return (\n    <div className=\"row\">\n        <h2>{title}</h2>\n\n        {/* map out all the movie info\nsuch as image, name and movie id. For isLargeRow props we pass various styles will be\napplied otherwise the normal movie poster will be applied. */}\n    <div className=\"row__posters\">\n        {movies.map(movie => (\n             <img\n             key={movie.id}\n             onClick={() => handleClick(movie)}\n            className= {`row__poster ${isLargeRow &&\"row__posterLarge\"}`} \n             src= {`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path }`}\n             alt={movie.name} />\n        ))}\n    \n    </div>\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n    </div>\n  )\n}\n\nexport default Row"],"mappings":"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"},"metadata":{},"sourceType":"module"}